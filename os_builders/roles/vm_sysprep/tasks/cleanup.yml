# Adapted from
# https://github.com/stfc/k8s-image-builder/blob/master/images/capi/ansible/roles/sysprep/tasks/main.yml

- name: Truncate machine id
  file:
    state: "{{ item.state }}"
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { path: /etc/machine-id, state: absent, mode: "0444" }
    - { path: /etc/machine-id, state: touch, mode: "0444" }

- name: Truncate hostname file
  file:
    state: "{{ item.state }}"
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { path: /etc/hostname, state: absent, mode: "0644" }
    - { path: /etc/hostname, state: touch, mode: "0644" }

- name: Set hostname
  hostname:
    name: localhost.local
    use: systemd

- name: Reset hosts file
  copy:
    src: etc/hosts
    dest: /etc/hosts
    owner: root
    group: root
    mode: "0644"

- name: Truncate audit logs
  file:
    state: "{{ item.state }}"
    path: "{{ item.path }}"
    owner: root
    group: utmp
    mode: "{{ item.mode }}"
  loop:
    - { path: /var/log/wtmp, state: absent, mode: "0664" }
    - { path: /var/log/lastlog, state: absent, mode: "" }
    - { path: /var/log/wtmp, state: touch, mode: "0664" }
    - { path: /var/log/lastlog, state: touch, mode: "0644" }

- name: Remove cloud-init lib dir and logs
  file:
    state: absent
    path: "{{ item }}"
  loop:
    - /var/log/cloud-init.log
    - /var/log/cloud-init-output.log

# A shallow search in /tmp and /var/tmp is used to declare which files or
# directories will be removed as part of resetting temp space. The reason
# a state absent->directory task isn't used is because Ansible's own data
# directory on the remote host(s) is /tmp/.ansible. Thus, by removing /tmp,
# Ansible can no longer access the remote host.
- name: Find temp files
  find:
    depth: 1
    file_type: any
    paths:
      - /tmp
      - /var/tmp
    pattern: "*"
  register: temp_files

- name: Reset temp space
  file:
    state: absent
    path: "{{ item.path }}"
  loop: "{{ temp_files.files }}"

- name: Find SSH host keys
  find:
    path: /etc/ssh
    pattern: "ssh_host_*"
  register: ssh_host_keys

- name: Remove SSH host keys
  file:
    state: absent
    path: "{{ item.path }}"
  loop: "{{ ssh_host_keys.files }}"

- name: Truncate all remaining log files in /var/log
  shell:
    cmd: |
      find /var/log -type f -iname '*.log' | xargs truncate -s 0
  when: ansible_os_family != "Flatcar"

- name: Delete all logrotated log zips
  shell:
    cmd: |
      find /var/log -type f -name '*.gz' -exec rm {} +
  when: ansible_os_family != "Flatcar"

- name: Remove swapfile
  file:
    state: "{{ item.state }}"
    path: "{{ item.path }}"
  loop:
    - { path: /swapfile, state: absent }
    - { path: /mnt/resource/swapfile, state: absent }
  when: ansible_memory_mb.swap.total != 0

- name: Truncate shell history
  file:
    state: absent
    path: "{{ item.path }}"
  loop:
    - { path: /root/.bash_history }
    - {
        path: "/home/{{ ansible_env.SUDO_USER | default(ansible_user_id) }}/.bash_history",
      }

- name: Rotate journalctl to archive logs
  shell:
    cmd: |
      journalctl --rotate
  when: not ( ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7 )

- name: Remove archived journalctl logs
  shell:
    cmd: |
      journalctl -m --vacuum-time=1s
