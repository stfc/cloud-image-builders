- name: Install openssh-server
  package:
    name: openssh-server
    state: present

- name: Enable root login for authorized admins
  block:
    - debug:
        msg: "ROOT_PASSWORD is undefined, disabling password based login.  Please set it in your environment."
      when: not lookup('env', 'ROOT_PASSWORD')

    - name: Enable root account
      user:
        name: cloud
        state: present
        shell: /bin/bash
        # If a password is not set in the environment, disable password based login
        password: "{{ lookup('env', 'ROOT_PASSWORD', default='!') }}"

    - name: Ensure cloud sudoers.d directory exists
      file:
        path: "/etc/sudoers.d"
        state: directory
        owner: root
        group: root
        mode: 0440

    - name: Add cloud user to sudoers
      copy:
        dest: /etc/sudoers.d/cloud-team-user
        content: "cloud ALL=(ALL) NOPASSWD:ALL"
        mode: 0440

- name: Ensure cloud home directory exists
  file:
    path: "/home/cloud/.ssh"
    state: directory
    owner: cloud
    group: cloud
    mode: 0700



- name: Copy authorized cloud admin keys into cloud's authorized_keys
  copy:
    src: "authorized_keys"
    dest: "/home/cloud/.ssh/authorized_keys"
    owner: cloud
    group: cloud
    mode: 0600

- name: Copy authorized key update script in
  copy:
    src: "update_keys.sh"
    dest: "/usr/local/sbin/update_keys.sh"
    owner: root
    group: root
    mode: 0700

# ensure that cron is installed
- include_tasks: cron.yml

- name: Update admin keys periodically
  ansible.builtin.cron:
    name: "update_admin_keys"
    minute: 0
    hour: 7
    job: "/usr/local/sbin/update_keys.sh"
